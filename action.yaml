name: Setup Deploy
description: Configure credentions and Repo files to deploy
author: Robson Andrade

inputs:
  aws-account-id:
    description: the aws account id
    required: false
    default: "149592216170"
  ecr-repo:
    description: the aws ecr repository
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.0.0

    #- name: Configure AWS credentials
      #uses: aws-actions/configure-aws-credentials@v3 
      #with:
        #aws-region: ${{ env.AWS_DEFAULT_REGION }}
        #aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        #aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

    #- name: Configure AWS credentials
      #shell: bash
      #run: |
        #mkdir ~/.aws
        #echo "[default]" >  ~/.aws/credentials
        #echo "aws_access_key_id = ${{ env.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        #echo "aws_secret_access_key = ${{ env.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
        #echo "[default]" > ~/.aws/config
        #echo "region = ${{ env.AWS_DEFAULT_REGION }}" >> ~/.aws/config
        #echo "output = json" >> ~/.aws/config

    - name: Login to AWS ECR
      shell: bash
      run: |
        aws ecr get-login-password \
          --region ${{ env.AWS_DEFAULT_REGION }} | docker login \
          --username AWS --password-stdin ${{ inputs.ecr-repo }}

    #- name: Login to Amazon ECR
      #id: login-ecr
      #uses: aws-actions/amazon-ecr-login@v2
      #with:
        #registries: ${{ inputs.aws-account-id }}

    - name: Log into registry ${{ env.GH_CR }}
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.GH_CR }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Install helm ssm plugin
      uses: amicci-labs/helm-ssm-plugin-action@master

    - name: Get version from commit hash
      shell: bash
      run: |
        echo "VERSION=`echo ${{ github.sha }} | cut -c1-7`" >> $GITHUB_ENV

    - name: Set kubeconfig
      shell: bash
      #env:
        #AWS_ACCOUNT_ID: ${{ inputs.aws-account-id }}
      run: |
        aws eks --region us-east-1 update-kubeconfig \
          --name ${{ env.K8S_CLUSTER }}
